<?php

// Data functions (insert, update, delete, form) for table budgets

// This script and data application were generated by AppGini 5.76
// Download AppGini for free from https://bigprof.com/appgini/download/

function budgets_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('budgets');
	if(!$arrPerm[1]){
		return false;
	}

	$data['convention'] = makeSafe($_REQUEST['convention']);
		if($data['convention'] == empty_lookup_value){ $data['convention'] = ''; }
	$data['type'] = makeSafe($_REQUEST['type']);
		if($data['type'] == empty_lookup_value){ $data['type'] = ''; }
	$data['accorde'] = makeSafe($_REQUEST['accorde']);
		if($data['accorde'] == empty_lookup_value){ $data['accorde'] = ''; }
	$data['verse'] = makeSafe($_REQUEST['verse']);
		if($data['verse'] == empty_lookup_value){ $data['verse'] = ''; }
	$data['reste_verser'] = makeSafe($_REQUEST['reste_verser']);
		if($data['reste_verser'] == empty_lookup_value){ $data['reste_verser'] = ''; }
	$data['ouvert'] = makeSafe($_REQUEST['ouvert']);
		if($data['ouvert'] == empty_lookup_value){ $data['ouvert'] = ''; }
	$data['reste_ouvrir'] = makeSafe($_REQUEST['reste_ouvrir']);
		if($data['reste_ouvrir'] == empty_lookup_value){ $data['reste_ouvrir'] = ''; }
	$data['reserve'] = makeSafe($_REQUEST['reserve']);
		if($data['reserve'] == empty_lookup_value){ $data['reserve'] = ''; }
	$data['liquide'] = makeSafe($_REQUEST['liquide']);
		if($data['liquide'] == empty_lookup_value){ $data['liquide'] = ''; }
	$data['utilise'] = makeSafe($_REQUEST['utilise']);
		if($data['utilise'] == empty_lookup_value){ $data['utilise'] = ''; }
	$data['disponible'] = makeSafe($_REQUEST['disponible']);
		if($data['disponible'] == empty_lookup_value){ $data['disponible'] = ''; }
	$data['reste_engager'] = makeSafe($_REQUEST['reste_engager']);
		if($data['reste_engager'] == empty_lookup_value){ $data['reste_engager'] = ''; }
	$data['prop_uo'] = makeSafe($_REQUEST['prop_uo']);
		if($data['prop_uo'] == empty_lookup_value){ $data['prop_uo'] = ''; }
	$data['prop_uv'] = makeSafe($_REQUEST['prop_uv']);
		if($data['prop_uv'] == empty_lookup_value){ $data['prop_uv'] = ''; }
	$data['prop_ua'] = makeSafe($_REQUEST['prop_ua']);
		if($data['prop_ua'] == empty_lookup_value){ $data['prop_ua'] = ''; }
	if($data['convention']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Convention': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['type']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Type': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['accorde']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Accord&#233;': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	// hook: budgets_before_insert
	if(function_exists('budgets_before_insert')){
		$args=array();
		if(!budgets_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `budgets` set       `convention`=' . (($data['convention'] !== '' && $data['convention'] !== NULL) ? "'{$data['convention']}'" : 'NULL') . ', `type`=' . (($data['type'] !== '' && $data['type'] !== NULL) ? "'{$data['type']}'" : 'NULL') . ', `accorde`=' . (($data['accorde'] !== '' && $data['accorde'] !== NULL) ? "'{$data['accorde']}'" : 'NULL') . ', `verse`=' . (($data['verse'] !== '' && $data['verse'] !== NULL) ? "'{$data['verse']}'" : 'NULL') . ', `reste_verser`=' . (($data['reste_verser'] !== '' && $data['reste_verser'] !== NULL) ? "'{$data['reste_verser']}'" : 'NULL') . ', `ouvert`=' . (($data['ouvert'] !== '' && $data['ouvert'] !== NULL) ? "'{$data['ouvert']}'" : 'NULL') . ', `reste_ouvrir`=' . (($data['reste_ouvrir'] !== '' && $data['reste_ouvrir'] !== NULL) ? "'{$data['reste_ouvrir']}'" : 'NULL') . ', `reserve`=' . (($data['reserve'] !== '' && $data['reserve'] !== NULL) ? "'{$data['reserve']}'" : 'NULL') . ', `liquide`=' . (($data['liquide'] !== '' && $data['liquide'] !== NULL) ? "'{$data['liquide']}'" : 'NULL') . ', `utilise`=' . (($data['utilise'] !== '' && $data['utilise'] !== NULL) ? "'{$data['utilise']}'" : 'NULL') . ', `disponible`=' . (($data['disponible'] !== '' && $data['disponible'] !== NULL) ? "'{$data['disponible']}'" : 'NULL') . ', `reste_engager`=' . (($data['reste_engager'] !== '' && $data['reste_engager'] !== NULL) ? "'{$data['reste_engager']}'" : 'NULL') . ', `prop_uo`=' . (($data['prop_uo'] !== '' && $data['prop_uo'] !== NULL) ? "'{$data['prop_uo']}'" : 'NULL') . ', `prop_uv`=' . (($data['prop_uv'] !== '' && $data['prop_uv'] !== NULL) ? "'{$data['prop_uv']}'" : 'NULL') . ', `prop_ua`=' . (($data['prop_ua'] !== '' && $data['prop_ua'] !== NULL) ? "'{$data['prop_ua']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"budgets_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: budgets_after_insert
	if(function_exists('budgets_after_insert')){
		$res = sql("select * from `budgets` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!budgets_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('budgets', $recID, getLoggedMemberID());

	return $recID;
}

function budgets_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('budgets');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='budgets' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='budgets' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: budgets_before_delete
	if(function_exists('budgets_before_delete')){
		$args=array();
		if(!budgets_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: versements
	$res = sql("select `id` from `budgets` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `versements` where `ligne_budgetaire`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "versements", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "versements", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='budgets_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='budgets_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: lignes_credits
	$res = sql("select `id` from `budgets` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `lignes_credits` where `ligne_budgetaire`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "lignes_credits", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "lignes_credits", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='budgets_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='budgets_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: credits
	$res = sql("select `id` from `budgets` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `credits` where `ligne_budgetaire`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "credits", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "credits", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='budgets_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='budgets_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: depenses
	$res = sql("select `id` from `budgets` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `depenses` where `ligne_budgetaire`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "depenses", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "depenses", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='budgets_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='budgets_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `budgets` where `id`='$selected_id'", $eo);

	// hook: budgets_after_delete
	if(function_exists('budgets_after_delete')){
		$args=array();
		budgets_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='budgets' and pkValue='$selected_id'", $eo);
}

function budgets_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('budgets');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='budgets' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='budgets' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['convention'] = makeSafe($_REQUEST['convention']);
		if($data['convention'] == empty_lookup_value){ $data['convention'] = ''; }
	if($data['convention']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Convention': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['type'] = makeSafe($_REQUEST['type']);
		if($data['type'] == empty_lookup_value){ $data['type'] = ''; }
	if($data['type']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Type': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['accorde'] = makeSafe($_REQUEST['accorde']);
		if($data['accorde'] == empty_lookup_value){ $data['accorde'] = ''; }
	if($data['accorde']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Accord&#233;': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['verse'] = makeSafe($_REQUEST['verse']);
		if($data['verse'] == empty_lookup_value){ $data['verse'] = ''; }
	$data['reste_verser'] = makeSafe($_REQUEST['reste_verser']);
		if($data['reste_verser'] == empty_lookup_value){ $data['reste_verser'] = ''; }
	$data['ouvert'] = makeSafe($_REQUEST['ouvert']);
		if($data['ouvert'] == empty_lookup_value){ $data['ouvert'] = ''; }
	$data['reste_ouvrir'] = makeSafe($_REQUEST['reste_ouvrir']);
		if($data['reste_ouvrir'] == empty_lookup_value){ $data['reste_ouvrir'] = ''; }
	$data['reserve'] = makeSafe($_REQUEST['reserve']);
		if($data['reserve'] == empty_lookup_value){ $data['reserve'] = ''; }
	$data['liquide'] = makeSafe($_REQUEST['liquide']);
		if($data['liquide'] == empty_lookup_value){ $data['liquide'] = ''; }
	$data['utilise'] = makeSafe($_REQUEST['utilise']);
		if($data['utilise'] == empty_lookup_value){ $data['utilise'] = ''; }
	$data['disponible'] = makeSafe($_REQUEST['disponible']);
		if($data['disponible'] == empty_lookup_value){ $data['disponible'] = ''; }
	$data['reste_engager'] = makeSafe($_REQUEST['reste_engager']);
		if($data['reste_engager'] == empty_lookup_value){ $data['reste_engager'] = ''; }
	$data['prop_uo'] = makeSafe($_REQUEST['prop_uo']);
		if($data['prop_uo'] == empty_lookup_value){ $data['prop_uo'] = ''; }
	$data['prop_uv'] = makeSafe($_REQUEST['prop_uv']);
		if($data['prop_uv'] == empty_lookup_value){ $data['prop_uv'] = ''; }
	$data['prop_ua'] = makeSafe($_REQUEST['prop_ua']);
		if($data['prop_ua'] == empty_lookup_value){ $data['prop_ua'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: budgets_before_update
	if(function_exists('budgets_before_update')){
		$args=array();
		if(!budgets_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `budgets` set       `convention`=' . (($data['convention'] !== '' && $data['convention'] !== NULL) ? "'{$data['convention']}'" : 'NULL') . ', `type`=' . (($data['type'] !== '' && $data['type'] !== NULL) ? "'{$data['type']}'" : 'NULL') . ', `accorde`=' . (($data['accorde'] !== '' && $data['accorde'] !== NULL) ? "'{$data['accorde']}'" : 'NULL') . ', `verse`=' . (($data['verse'] !== '' && $data['verse'] !== NULL) ? "'{$data['verse']}'" : 'NULL') . ', `reste_verser`=' . (($data['reste_verser'] !== '' && $data['reste_verser'] !== NULL) ? "'{$data['reste_verser']}'" : 'NULL') . ', `ouvert`=' . (($data['ouvert'] !== '' && $data['ouvert'] !== NULL) ? "'{$data['ouvert']}'" : 'NULL') . ', `reste_ouvrir`=' . (($data['reste_ouvrir'] !== '' && $data['reste_ouvrir'] !== NULL) ? "'{$data['reste_ouvrir']}'" : 'NULL') . ', `reserve`=' . (($data['reserve'] !== '' && $data['reserve'] !== NULL) ? "'{$data['reserve']}'" : 'NULL') . ', `liquide`=' . (($data['liquide'] !== '' && $data['liquide'] !== NULL) ? "'{$data['liquide']}'" : 'NULL') . ', `utilise`=' . (($data['utilise'] !== '' && $data['utilise'] !== NULL) ? "'{$data['utilise']}'" : 'NULL') . ', `disponible`=' . (($data['disponible'] !== '' && $data['disponible'] !== NULL) ? "'{$data['disponible']}'" : 'NULL') . ', `reste_engager`=' . (($data['reste_engager'] !== '' && $data['reste_engager'] !== NULL) ? "'{$data['reste_engager']}'" : 'NULL') . ', `prop_uo`=' . (($data['prop_uo'] !== '' && $data['prop_uo'] !== NULL) ? "'{$data['prop_uo']}'" : 'NULL') . ', `prop_uv`=' . (($data['prop_uv'] !== '' && $data['prop_uv'] !== NULL) ? "'{$data['prop_uv']}'" : 'NULL') . ', `prop_ua`=' . (($data['prop_ua'] !== '' && $data['prop_ua'] !== NULL) ? "'{$data['prop_ua']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="budgets_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: budgets_after_update
	if(function_exists('budgets_after_update')){
		$res = sql("SELECT * FROM `budgets` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!budgets_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='budgets' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function budgets_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('budgets');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_convention = thisOr(undo_magic_quotes($_REQUEST['filterer_convention']), '');
	$filterer_type = thisOr(undo_magic_quotes($_REQUEST['filterer_type']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: convention
	$combo_convention = new DataCombo;
	// combobox: type
	$combo_type = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='budgets' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='budgets' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `budgets` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'budgets_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_convention->SelectedData = $row['convention'];
		$combo_type->SelectedData = $row['type'];
	}else{
		$combo_convention->SelectedData = $filterer_convention;
		$combo_type->SelectedData = $filterer_type;
	}
	$combo_convention->HTML = '<span id="convention-container' . $rnd1 . '"></span><input type="hidden" name="convention" id="convention' . $rnd1 . '" value="' . html_attr($combo_convention->SelectedData) . '">';
	$combo_convention->MatchText = '<span id="convention-container-readonly' . $rnd1 . '"></span><input type="hidden" name="convention" id="convention' . $rnd1 . '" value="' . html_attr($combo_convention->SelectedData) . '">';
	$combo_type->HTML = $combo_type->MatchText = '<span id="type-container' . $rnd1 . '"></span>';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_convention__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['convention'] : $filterer_convention); ?>"};
		AppGini.current_type__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['type'] : $filterer_type); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(convention_reload__RAND__) == 'function') convention_reload__RAND__();
				if(typeof(type_reload__RAND__) == 'function') type_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function convention_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#convention-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_convention__RAND__.value, t: 'budgets', f: 'convention' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="convention"]').val(resp.results[0].id);
							$j('[id=convention-container-readonly__RAND__]').html('<span id="convention-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=conventions_view_parent]').hide(); }else{ $j('.btn[id=conventions_view_parent]').show(); }


							if(typeof(convention_update_autofills__RAND__) == 'function') convention_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'budgets', f: 'convention' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_convention__RAND__.value = e.added.id;
				AppGini.current_convention__RAND__.text = e.added.text;
				$j('[name="convention"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=conventions_view_parent]').hide(); }else{ $j('.btn[id=conventions_view_parent]').show(); }


				if(typeof(convention_update_autofills__RAND__) == 'function') convention_update_autofills__RAND__();
			});

			if(!$j("#convention-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_convention__RAND__.value, t: 'budgets', f: 'convention' },
					success: function(resp){
						$j('[name="convention"]').val(resp.results[0].id);
						$j('[id=convention-container-readonly__RAND__]').html('<span id="convention-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=conventions_view_parent]').hide(); }else{ $j('.btn[id=conventions_view_parent]').show(); }

						if(typeof(convention_update_autofills__RAND__) == 'function') convention_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_convention__RAND__.value, t: 'budgets', f: 'convention' },
				success: function(resp){
					$j('[id=convention-container__RAND__], [id=convention-container-readonly__RAND__]').html('<span id="convention-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=conventions_view_parent]').hide(); }else{ $j('.btn[id=conventions_view_parent]').show(); }

					if(typeof(convention_update_autofills__RAND__) == 'function') convention_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function type_reload__RAND__(){
			new Ajax.Updater("type-container__RAND__", "ajax_combo.php", {
				parameters: { t: "budgets", f: "type", id: AppGini.current_type__RAND__.value, text: AppGini.current_type__RAND__.text, o: <?php echo (($AllowUpdate || $AllowInsert) && !$dvprint ? '1' : '0'); ?> },
				method: "get",
				encoding: "<?php echo datalist_db_encoding; ?>",
				evalScripts: true,
				onComplete: function(){ /* */ type_changed__RAND__(); }
			});
		}
		function type_changed__RAND__(){
			if($j("input[name=type]").length){
				if($j("input[name=type]:checked").length){
					AppGini.current_type__RAND__.value = $j("input[name=type]:checked").val();
					AppGini.current_type__RAND__.text = "";
				}else{
					AppGini.current_type__RAND__.value = "";
					AppGini.current_type__RAND__.text = "";
				}
				AppGini.hideViewParentLinks();
			}

			if(typeof(type_update_autofills__RAND__) == 'function') type_update_autofills__RAND__();
		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/budgets_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/budgets_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Ligne budg&#233;taire', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return budgets_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return budgets_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return budgets_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#convention').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#convention_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#type').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#type_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#accorde').replaceWith('<div class=\"form-control-static\" id=\"accorde\">' + (jQuery('#accorde').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#verse').replaceWith('<div class=\"form-control-static\" id=\"verse\">' + (jQuery('#verse').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#reste_verser').replaceWith('<div class=\"form-control-static\" id=\"reste_verser\">' + (jQuery('#reste_verser').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#ouvert').replaceWith('<div class=\"form-control-static\" id=\"ouvert\">' + (jQuery('#ouvert').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#reste_ouvrir').replaceWith('<div class=\"form-control-static\" id=\"reste_ouvrir\">' + (jQuery('#reste_ouvrir').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#reserve').replaceWith('<div class=\"form-control-static\" id=\"reserve\">' + (jQuery('#reserve').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#liquide').replaceWith('<div class=\"form-control-static\" id=\"liquide\">' + (jQuery('#liquide').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#utilise').replaceWith('<div class=\"form-control-static\" id=\"utilise\">' + (jQuery('#utilise').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#disponible').replaceWith('<div class=\"form-control-static\" id=\"disponible\">' + (jQuery('#disponible').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#reste_engager').replaceWith('<div class=\"form-control-static\" id=\"reste_engager\">' + (jQuery('#reste_engager').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#prop_uo').replaceWith('<div class=\"form-control-static\" id=\"prop_uo\">' + (jQuery('#prop_uo').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#prop_uv').replaceWith('<div class=\"form-control-static\" id=\"prop_uv\">' + (jQuery('#prop_uv').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#prop_ua').replaceWith('<div class=\"form-control-static\" id=\"prop_ua\">' + (jQuery('#prop_ua').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(convention)%%>', $combo_convention->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(convention)%%>', $combo_convention->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(convention)%%>', urlencode($combo_convention->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(type)%%>', $combo_type->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(type)%%>', $combo_type->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(type)%%>', urlencode($combo_type->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'convention' => array('conventions', 'Convention'), 'type' => array('types_ligne', 'Type'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(convention)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(accorde)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(verse)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(reste_verser)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(ouvert)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(reste_ouvrir)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(reserve)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(liquide)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(utilise)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(disponible)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(reste_engager)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(prop_uo)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(prop_uv)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(prop_ua)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(convention)%%>', safe_html($urow['convention']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(convention)%%>', html_attr($row['convention']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(convention)%%>', urlencode($urow['convention']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', safe_html($urow['type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', html_attr($row['type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode($urow['type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(accorde)%%>', safe_html($urow['accorde']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(accorde)%%>', html_attr($row['accorde']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(accorde)%%>', urlencode($urow['accorde']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(verse)%%>', safe_html($urow['verse']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(verse)%%>', html_attr($row['verse']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(verse)%%>', urlencode($urow['verse']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(reste_verser)%%>', safe_html($urow['reste_verser']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(reste_verser)%%>', html_attr($row['reste_verser']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reste_verser)%%>', urlencode($urow['reste_verser']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(ouvert)%%>', safe_html($urow['ouvert']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(ouvert)%%>', html_attr($row['ouvert']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ouvert)%%>', urlencode($urow['ouvert']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(reste_ouvrir)%%>', safe_html($urow['reste_ouvrir']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(reste_ouvrir)%%>', html_attr($row['reste_ouvrir']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reste_ouvrir)%%>', urlencode($urow['reste_ouvrir']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(reserve)%%>', safe_html($urow['reserve']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(reserve)%%>', html_attr($row['reserve']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reserve)%%>', urlencode($urow['reserve']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(liquide)%%>', safe_html($urow['liquide']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(liquide)%%>', html_attr($row['liquide']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(liquide)%%>', urlencode($urow['liquide']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(utilise)%%>', safe_html($urow['utilise']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(utilise)%%>', html_attr($row['utilise']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(utilise)%%>', urlencode($urow['utilise']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(disponible)%%>', safe_html($urow['disponible']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(disponible)%%>', html_attr($row['disponible']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(disponible)%%>', urlencode($urow['disponible']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(reste_engager)%%>', safe_html($urow['reste_engager']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(reste_engager)%%>', html_attr($row['reste_engager']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reste_engager)%%>', urlencode($urow['reste_engager']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(prop_uo)%%>', safe_html($urow['prop_uo']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(prop_uo)%%>', html_attr($row['prop_uo']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(prop_uo)%%>', urlencode($urow['prop_uo']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(prop_uv)%%>', safe_html($urow['prop_uv']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(prop_uv)%%>', html_attr($row['prop_uv']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(prop_uv)%%>', urlencode($urow['prop_uv']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(prop_ua)%%>', safe_html($urow['prop_ua']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(prop_ua)%%>', html_attr($row['prop_ua']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(prop_ua)%%>', urlencode($urow['prop_ua']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(convention)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(convention)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(type)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(accorde)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(accorde)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(verse)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(verse)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(reste_verser)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reste_verser)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(ouvert)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ouvert)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(reste_ouvrir)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reste_ouvrir)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(reserve)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reserve)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(liquide)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(liquide)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(utilise)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(utilise)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(disponible)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(disponible)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(reste_engager)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reste_engager)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(prop_uo)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(prop_uo)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(prop_uv)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(prop_uv)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(prop_ua)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(prop_ua)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('budgets');
	if($selected_id){
		$jdata = get_joined_record('budgets', $selected_id);
		if($jdata === false) $jdata = get_defaults('budgets');
		$rdata = $row;
	}
	$templateCode .= loadView('budgets-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: budgets_dv
	if(function_exists('budgets_dv')){
		$args=array();
		budgets_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>