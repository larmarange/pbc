<?php
// This script and data application were generated by AppGini 5.97
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir = dirname(__FILE__);
	include_once("{$currDir}/lib.php");
	@include_once("{$currDir}/hooks/credits.php");
	include_once("{$currDir}/credits_dml.php");

	// mm: can the current member access this page?
	$perm = getTablePermissions('credits');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'credits';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`credits`.`id`" => "id",
		"IF(    CHAR_LENGTH(`conventions1`.`nom`), CONCAT_WS('',   `conventions1`.`nom`), '') /* Convention */" => "convention",
		"IF(    CHAR_LENGTH(`types_ligne1`.`gestionnaire`) || CHAR_LENGTH(`types_ligne1`.`type`) || CHAR_LENGTH(`budgets1`.`precision`), CONCAT_WS('',   `types_ligne1`.`gestionnaire`, ' - ', `types_ligne1`.`type`, ' - ', `budgets1`.`precision`), '') /* Ligne Budg&#233;taire */" => "ligne_budgetaire",
		"IF(    CHAR_LENGTH(`lignes_credits1`.`intitule`) || CHAR_LENGTH(`lignes_credits1`.`exercice`), CONCAT_WS('',   `lignes_credits1`.`intitule`, ' - ', `lignes_credits1`.`exercice`), '') /* Ligne de cr&#233;dit (CFI) - Exercice */" => "ligne_credit",
		"if(`credits`.`date`,date_format(`credits`.`date`,'%d/%m/%Y'),'')" => "date",
		"`credits`.`intitule`" => "intitule",
		"CONCAT('<span style=''color: ', IF(`credits`.`montant` < 0, 'red', 'black'), ';''>', FORMAT(`credits`.`montant`, 2, 'ru_RU'), '&nbsp;&euro;</span>')" => "montant",
		"if(CHAR_LENGTH(`credits`.`notes`)>80, concat(left(`credits`.`notes`,80),' ...'), `credits`.`notes`)" => "notes",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`credits`.`id`',
		2 => '`conventions1`.`nom`',
		3 => 3,
		4 => 4,
		5 => '`credits`.`date`',
		6 => 6,
		7 => '`credits`.`montant`',
		8 => 8,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`credits`.`id`" => "id",
		"IF(    CHAR_LENGTH(`conventions1`.`nom`), CONCAT_WS('',   `conventions1`.`nom`), '') /* Convention */" => "convention",
		"IF(    CHAR_LENGTH(`types_ligne1`.`gestionnaire`) || CHAR_LENGTH(`types_ligne1`.`type`) || CHAR_LENGTH(`budgets1`.`precision`), CONCAT_WS('',   `types_ligne1`.`gestionnaire`, ' - ', `types_ligne1`.`type`, ' - ', `budgets1`.`precision`), '') /* Ligne Budg&#233;taire */" => "ligne_budgetaire",
		"IF(    CHAR_LENGTH(`lignes_credits1`.`intitule`) || CHAR_LENGTH(`lignes_credits1`.`exercice`), CONCAT_WS('',   `lignes_credits1`.`intitule`, ' - ', `lignes_credits1`.`exercice`), '') /* Ligne de cr&#233;dit (CFI) - Exercice */" => "ligne_credit",
		"if(`credits`.`date`,date_format(`credits`.`date`,'%d/%m/%Y'),'')" => "date",
		"`credits`.`intitule`" => "intitule",
		"CONCAT('<span style=''color: ', IF(`credits`.`montant` < 0, 'red', 'black'), ';''>', FORMAT(`credits`.`montant`, 2, 'ru_RU'), '&nbsp;&euro;</span>')" => "montant",
		"`credits`.`notes`" => "notes",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`credits`.`id`" => "ID",
		"IF(    CHAR_LENGTH(`conventions1`.`nom`), CONCAT_WS('',   `conventions1`.`nom`), '') /* Convention */" => "Convention",
		"IF(    CHAR_LENGTH(`types_ligne1`.`gestionnaire`) || CHAR_LENGTH(`types_ligne1`.`type`) || CHAR_LENGTH(`budgets1`.`precision`), CONCAT_WS('',   `types_ligne1`.`gestionnaire`, ' - ', `types_ligne1`.`type`, ' - ', `budgets1`.`precision`), '') /* Ligne Budg&#233;taire */" => "Ligne Budg&#233;taire",
		"IF(    CHAR_LENGTH(`lignes_credits1`.`intitule`) || CHAR_LENGTH(`lignes_credits1`.`exercice`), CONCAT_WS('',   `lignes_credits1`.`intitule`, ' - ', `lignes_credits1`.`exercice`), '') /* Ligne de cr&#233;dit (CFI) - Exercice */" => "Ligne de cr&#233;dit (CFI) - Exercice",
		"`credits`.`date`" => "Date",
		"`credits`.`intitule`" => "Intitul&#233;",
		"`credits`.`montant`" => "Montant",
		"`credits`.`notes`" => "Notes",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`credits`.`id`" => "id",
		"IF(    CHAR_LENGTH(`conventions1`.`nom`), CONCAT_WS('',   `conventions1`.`nom`), '') /* Convention */" => "convention",
		"IF(    CHAR_LENGTH(`types_ligne1`.`gestionnaire`) || CHAR_LENGTH(`types_ligne1`.`type`) || CHAR_LENGTH(`budgets1`.`precision`), CONCAT_WS('',   `types_ligne1`.`gestionnaire`, ' - ', `types_ligne1`.`type`, ' - ', `budgets1`.`precision`), '') /* Ligne Budg&#233;taire */" => "ligne_budgetaire",
		"IF(    CHAR_LENGTH(`lignes_credits1`.`intitule`) || CHAR_LENGTH(`lignes_credits1`.`exercice`), CONCAT_WS('',   `lignes_credits1`.`intitule`, ' - ', `lignes_credits1`.`exercice`), '') /* Ligne de cr&#233;dit (CFI) - Exercice */" => "ligne_credit",
		"if(`credits`.`date`,date_format(`credits`.`date`,'%d/%m/%Y'),'')" => "date",
		"`credits`.`intitule`" => "intitule",
		"CONCAT('<span style=''color: ', IF(`credits`.`montant` < 0, 'red', 'black'), ';''>', FORMAT(`credits`.`montant`, 2, 'ru_RU'), '&nbsp;&euro;</span>')" => "montant",
		"`credits`.`notes`" => "Notes",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['convention' => 'Convention', 'ligne_budgetaire' => 'Ligne Budg&#233;taire', 'ligne_credit' => 'Ligne de cr&#233;dit (CFI) - Exercice', ];

	$x->QueryFrom = "`credits` LEFT JOIN `conventions` as conventions1 ON `conventions1`.`id`=`credits`.`convention` LEFT JOIN `budgets` as budgets1 ON `budgets1`.`id`=`credits`.`ligne_budgetaire` LEFT JOIN `types_ligne` as types_ligne1 ON `types_ligne1`.`id`=`budgets1`.`type` LEFT JOIN `lignes_credits` as lignes_credits1 ON `lignes_credits1`.`id`=`credits`.`ligne_credit` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = true;
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 50;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'credits_view.php';
	$x->RedirectAfterInsert = 'credits_view.php?SelectedID=#ID#';
	$x->TableTitle = 'Cr&#233;dits (ouverture)';
	$x->TableIcon = 'resources/table_icons/051-revenue.png';
	$x->PrimaryKey = '`credits`.`id`';
	$x->DefaultSortField = '`credits`.`date`';
	$x->DefaultSortDirection = 'desc';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Convention', 'Ligne Budg&#233;taire', 'Ligne de cr&#233;dit (CFI) - Exercice', 'Date', 'Intitul&#233;', 'Montant', 'Notes', ];
	$x->ColFieldName = ['convention', 'ligne_budgetaire', 'ligne_credit', 'date', 'intitule', 'montant', 'notes', ];
	$x->ColNumber  = [2, 3, 4, 5, 6, 7, 8, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/credits_templateTV.html';
	$x->SelectedTemplate = 'templates/credits_templateTVS.html';
	$x->TemplateDV = 'templates/credits_templateDV.html';
	$x->TemplateDVP = 'templates/credits_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: credits_init
	$render = true;
	if(function_exists('credits_init')) {
		$args = [];
		$render = credits_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// column sums
	if(strpos($x->HTML, '<!-- tv data below -->')) {
		// if printing multi-selection TV, calculate the sum only for the selected records
		if(isset($_REQUEST['Print_x']) && is_array($_REQUEST['record_selector'])) {
			$QueryWhere = '';
			foreach($_REQUEST['record_selector'] as $id) {   // get selected records
				if($id != '') $QueryWhere .= "'" . makeSafe($id) . "',";
			}
			if($QueryWhere != '') {
				$QueryWhere = 'where `credits`.`id` in ('.substr($QueryWhere, 0, -1).')';
			} else { // if no selected records, write the where clause to return an empty result
				$QueryWhere = 'where 1=0';
			}
		} else {
			$QueryWhere = $x->QueryWhere;
		}

		$sumQuery = "SELECT CONCAT('<span style=''color: ', IF(SUM(`credits`.`montant`) < 0, 'red', 'black'), ';''>', FORMAT(SUM(`credits`.`montant`), 2, 'ru_RU'), '&nbsp;&euro;</span>') FROM {$x->QueryFrom} {$QueryWhere}";
		$res = sql($sumQuery, $eo);
		if($row = db_fetch_row($res)) {
			$sumRow = '<tr class="success sum">';
			if(!isset($_REQUEST['Print_x'])) $sumRow .= '<th class="text-center sum">&sum;</th>';
			$sumRow .= '<td class="credits-convention sum"></td>';
			$sumRow .= '<td class="credits-ligne_budgetaire sum"></td>';
			$sumRow .= '<td class="credits-ligne_credit sum"></td>';
			$sumRow .= '<td class="credits-date sum"></td>';
			$sumRow .= '<td class="credits-intitule sum"></td>';
			$sumRow .= "<td class=\"credits-montant text-right sum\">{$row[0]}</td>";
			$sumRow .= '<td class="credits-notes sum"></td>';
			$sumRow .= '</tr>';

			$x->HTML = str_replace('<!-- tv data below -->', '', $x->HTML);
			$x->HTML = str_replace('<!-- tv data above -->', $sumRow, $x->HTML);
		}
	}

	// hook: credits_header
	$headerCode = '';
	if(function_exists('credits_header')) {
		$args = [];
		$headerCode = credits_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once("{$currDir}/header.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/header.php");
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: credits_footer
	$footerCode = '';
	if(function_exists('credits_footer')) {
		$args = [];
		$footerCode = credits_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once("{$currDir}/footer.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/footer.php");
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
