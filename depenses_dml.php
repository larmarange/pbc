<?php

// Data functions (insert, update, delete, form) for table depenses

// This script and data application were generated by AppGini 5.97
// Download AppGini for free from https://bigprof.com/appgini/download/

function depenses_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('depenses');
	if(!$arrPerm['insert']) return false;

	$data = [
		'convention' => Request::lookup('convention', ''),
		'ligne_budgetaire' => Request::lookup('ligne_budgetaire', ''),
		'ligne_credit' => Request::lookup('ligne_credit', ''),
		'date' => Request::dateComponents('date', '1'),
		'intitule' => Request::val('intitule', ''),
		'reference' => Request::val('reference', ''),
		'contrat' => Request::lookup('contrat', ''),
		'beneficiaire' => Request::lookup('beneficiaire', ''),
		'montant' => Request::val('montant', ''),
		'liquidee' => Request::checkBox('liquidee', ''),
		'ventilation' => Request::lookup('ventilation', ''),
		'notes' => Request::val('notes', ''),
		'verifie' => Request::checkBox('verifie', ''),
	];

	if($data['convention'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Convention': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['ligne_credit'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Ligne de cr&#233;dit (CFI) - Exercice': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['intitule'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Intitul&#233;': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['montant'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Montant': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}

	// hook: depenses_before_insert
	if(function_exists('depenses_before_insert')) {
		$args = [];
		if(!depenses_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('depenses', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	update_calc_fields('depenses', $recID, calculated_fields()['depenses']);

	// hook: depenses_after_insert
	if(function_exists('depenses_after_insert')) {
		$res = sql("SELECT * FROM `depenses` WHERE `id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=[];
		if(!depenses_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('depenses', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) depenses_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function depenses_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function depenses_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('depenses', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: depenses_before_delete
	if(function_exists('depenses_before_delete')) {
		$args = [];
		if(!depenses_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	sql("DELETE FROM `depenses` WHERE `id`='{$selected_id}'", $eo);

	// hook: depenses_after_delete
	if(function_exists('depenses_after_delete')) {
		$args = [];
		depenses_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='depenses' AND `pkValue`='{$selected_id}'", $eo);
}

function depenses_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('depenses', $selected_id, 'edit')) return false;

	$data = [
		'convention' => Request::lookup('convention', ''),
		'ligne_budgetaire' => Request::lookup('ligne_budgetaire', ''),
		'ligne_credit' => Request::lookup('ligne_credit', ''),
		'date' => Request::dateComponents('date', ''),
		'intitule' => Request::val('intitule', ''),
		'reference' => Request::val('reference', ''),
		'contrat' => Request::lookup('contrat', ''),
		'beneficiaire' => Request::lookup('beneficiaire', ''),
		'montant' => Request::val('montant', ''),
		'liquidee' => Request::checkBox('liquidee', ''),
		'ventilation' => Request::lookup('ventilation', ''),
		'notes' => Request::val('notes', ''),
		'verifie' => Request::checkBox('verifie', ''),
	];

	if($data['convention'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Convention': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['ligne_credit'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Ligne de cr&#233;dit (CFI) - Exercice': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['intitule'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Intitul&#233;': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['montant'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Montant': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	// get existing values
	$old_data = getRecord('depenses', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: depenses_before_update
	if(function_exists('depenses_before_update')) {
		$args = ['old_data' => $old_data];
		if(!depenses_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'depenses', 
		backtick_keys_once($set), 
		['`id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="depenses_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('depenses', $data['selectedID'], calculated_fields()['depenses']);

	// hook: depenses_after_update
	if(function_exists('depenses_after_update')) {
		$res = sql("SELECT * FROM `depenses` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['id'];
		$args = ['old_data' => $old_data];
		if(!depenses_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='depenses' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function depenses_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm = getTablePermissions('depenses');
	if(!$arrPerm['insert'] && $selected_id=='') return $Translation['tableAccessDenied'];
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_convention = thisOr($_REQUEST['filterer_convention'], '');
	$filterer_ligne_budgetaire = thisOr($_REQUEST['filterer_ligne_budgetaire'], '');
	$filterer_ligne_credit = thisOr($_REQUEST['filterer_ligne_credit'], '');
	$filterer_contrat = thisOr($_REQUEST['filterer_contrat'], '');
	$filterer_beneficiaire = thisOr($_REQUEST['filterer_beneficiaire'], '');
	$filterer_ventilation = thisOr($_REQUEST['filterer_ventilation'], '');

	// populate filterers, starting from children to grand-parents
	if($filterer_ligne_budgetaire && !$filterer_convention) $filterer_convention = sqlValue("select convention from budgets where id='" . makeSafe($filterer_ligne_budgetaire) . "'");
	if($filterer_ligne_credit && !$filterer_convention) $filterer_convention = sqlValue("select convention from lignes_credits where id='" . makeSafe($filterer_ligne_credit) . "'");
	if($filterer_contrat && !$filterer_convention) $filterer_convention = sqlValue("select convention from recrutements where id='" . makeSafe($filterer_contrat) . "'");
	if($filterer_ventilation && !$filterer_convention) $filterer_convention = sqlValue("select convention from ventilation where id='" . makeSafe($filterer_ventilation) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: convention
	$combo_convention = new DataCombo;
	// combobox: ligne_budgetaire, filterable by: convention
	$combo_ligne_budgetaire = new DataCombo;
	// combobox: ligne_credit, filterable by: convention
	$combo_ligne_credit = new DataCombo;
	// combobox: date
	$combo_date = new DateCombo;
	$combo_date->DateFormat = "dmy";
	$combo_date->MinYear = 1900;
	$combo_date->MaxYear = 2100;
	$combo_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_date->MonthNames = $Translation['month names'];
	$combo_date->NamePrefix = 'date';
	// combobox: contrat, filterable by: convention
	$combo_contrat = new DataCombo;
	// combobox: beneficiaire
	$combo_beneficiaire = new DataCombo;
	// combobox: ventilation, filterable by: convention
	$combo_ventilation = new DataCombo;

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='depenses' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='depenses' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `depenses` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'depenses_view.php', false);
		}
		$combo_convention->SelectedData = $row['convention'];
		$combo_ligne_budgetaire->SelectedData = $row['ligne_budgetaire'];
		$combo_ligne_credit->SelectedData = $row['ligne_credit'];
		$combo_date->DefaultDate = $row['date'];
		$combo_contrat->SelectedData = $row['contrat'];
		$combo_beneficiaire->SelectedData = $row['beneficiaire'];
		$combo_ventilation->SelectedData = $row['ventilation'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$combo_convention->SelectedData = $filterer_convention;
		$combo_ligne_budgetaire->SelectedData = $filterer_ligne_budgetaire;
		$combo_ligne_credit->SelectedData = $filterer_ligne_credit;
		$combo_contrat->SelectedData = $filterer_contrat;
		$combo_beneficiaire->SelectedData = $filterer_beneficiaire;
		$combo_ventilation->SelectedData = $filterer_ventilation;
	}
	$combo_convention->HTML = '<span id="convention-container' . $rnd1 . '"></span><input type="hidden" name="convention" id="convention' . $rnd1 . '" value="' . html_attr($combo_convention->SelectedData) . '">';
	$combo_convention->MatchText = '<span id="convention-container-readonly' . $rnd1 . '"></span><input type="hidden" name="convention" id="convention' . $rnd1 . '" value="' . html_attr($combo_convention->SelectedData) . '">';
	$combo_ligne_budgetaire->HTML = '<span id="ligne_budgetaire-container' . $rnd1 . '"></span><input type="hidden" name="ligne_budgetaire" id="ligne_budgetaire' . $rnd1 . '" value="' . html_attr($combo_ligne_budgetaire->SelectedData) . '">';
	$combo_ligne_budgetaire->MatchText = '<span id="ligne_budgetaire-container-readonly' . $rnd1 . '"></span><input type="hidden" name="ligne_budgetaire" id="ligne_budgetaire' . $rnd1 . '" value="' . html_attr($combo_ligne_budgetaire->SelectedData) . '">';
	$combo_ligne_credit->HTML = '<span id="ligne_credit-container' . $rnd1 . '"></span><input type="hidden" name="ligne_credit" id="ligne_credit' . $rnd1 . '" value="' . html_attr($combo_ligne_credit->SelectedData) . '">';
	$combo_ligne_credit->MatchText = '<span id="ligne_credit-container-readonly' . $rnd1 . '"></span><input type="hidden" name="ligne_credit" id="ligne_credit' . $rnd1 . '" value="' . html_attr($combo_ligne_credit->SelectedData) . '">';
	$combo_contrat->HTML = '<span id="contrat-container' . $rnd1 . '"></span><input type="hidden" name="contrat" id="contrat' . $rnd1 . '" value="' . html_attr($combo_contrat->SelectedData) . '">';
	$combo_contrat->MatchText = '<span id="contrat-container-readonly' . $rnd1 . '"></span><input type="hidden" name="contrat" id="contrat' . $rnd1 . '" value="' . html_attr($combo_contrat->SelectedData) . '">';
	$combo_beneficiaire->HTML = '<span id="beneficiaire-container' . $rnd1 . '"></span><input type="hidden" name="beneficiaire" id="beneficiaire' . $rnd1 . '" value="' . html_attr($combo_beneficiaire->SelectedData) . '">';
	$combo_beneficiaire->MatchText = '<span id="beneficiaire-container-readonly' . $rnd1 . '"></span><input type="hidden" name="beneficiaire" id="beneficiaire' . $rnd1 . '" value="' . html_attr($combo_beneficiaire->SelectedData) . '">';
	$combo_ventilation->HTML = '<span id="ventilation-container' . $rnd1 . '"></span><input type="hidden" name="ventilation" id="ventilation' . $rnd1 . '" value="' . html_attr($combo_ventilation->SelectedData) . '">';
	$combo_ventilation->MatchText = '<span id="ventilation-container-readonly' . $rnd1 . '"></span><input type="hidden" name="ventilation" id="ventilation' . $rnd1 . '" value="' . html_attr($combo_ventilation->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_convention__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['convention'] : htmlspecialchars($filterer_convention, ENT_QUOTES)); ?>"};
		AppGini.current_ligne_budgetaire__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['ligne_budgetaire'] : htmlspecialchars($filterer_ligne_budgetaire, ENT_QUOTES)); ?>"};
		AppGini.current_ligne_credit__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['ligne_credit'] : htmlspecialchars($filterer_ligne_credit, ENT_QUOTES)); ?>"};
		AppGini.current_contrat__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['contrat'] : htmlspecialchars($filterer_contrat, ENT_QUOTES)); ?>"};
		AppGini.current_beneficiaire__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['beneficiaire'] : htmlspecialchars($filterer_beneficiaire, ENT_QUOTES)); ?>"};
		AppGini.current_ventilation__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['ventilation'] : htmlspecialchars($filterer_ventilation, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(convention_reload__RAND__) == 'function') convention_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(ligne_budgetaire_reload__RAND__) == \'function\') ligne_budgetaire_reload__RAND__(AppGini.current_convention__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(ligne_credit_reload__RAND__) == \'function\') ligne_credit_reload__RAND__(AppGini.current_convention__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(contrat_reload__RAND__) == \'function\') contrat_reload__RAND__(AppGini.current_convention__RAND__.value);' : ''); ?>
				if(typeof(beneficiaire_reload__RAND__) == 'function') beneficiaire_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(ventilation_reload__RAND__) == \'function\') ventilation_reload__RAND__(AppGini.current_convention__RAND__.value);' : ''); ?>
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function convention_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#convention-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_convention__RAND__.value, t: 'depenses', f: 'convention' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="convention"]').val(resp.results[0].id);
							$j('[id=convention-container-readonly__RAND__]').html('<span id="convention-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=conventions_view_parent]').hide(); } else { $j('.btn[id=conventions_view_parent]').show(); }

						if(typeof(ligne_budgetaire_reload__RAND__) == 'function') ligne_budgetaire_reload__RAND__(AppGini.current_convention__RAND__.value);
						if(typeof(ligne_credit_reload__RAND__) == 'function') ligne_credit_reload__RAND__(AppGini.current_convention__RAND__.value);
						if(typeof(contrat_reload__RAND__) == 'function') contrat_reload__RAND__(AppGini.current_convention__RAND__.value);
						if(typeof(ventilation_reload__RAND__) == 'function') ventilation_reload__RAND__(AppGini.current_convention__RAND__.value);

							if(typeof(convention_update_autofills__RAND__) == 'function') convention_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'depenses', f: 'convention' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_convention__RAND__.value = e.added.id;
				AppGini.current_convention__RAND__.text = e.added.text;
				$j('[name="convention"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=conventions_view_parent]').hide(); } else { $j('.btn[id=conventions_view_parent]').show(); }

						if(typeof(ligne_budgetaire_reload__RAND__) == 'function') ligne_budgetaire_reload__RAND__(AppGini.current_convention__RAND__.value);
						if(typeof(ligne_credit_reload__RAND__) == 'function') ligne_credit_reload__RAND__(AppGini.current_convention__RAND__.value);
						if(typeof(contrat_reload__RAND__) == 'function') contrat_reload__RAND__(AppGini.current_convention__RAND__.value);
						if(typeof(ventilation_reload__RAND__) == 'function') ventilation_reload__RAND__(AppGini.current_convention__RAND__.value);

				if(typeof(convention_update_autofills__RAND__) == 'function') convention_update_autofills__RAND__();
			});

			if(!$j("#convention-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_convention__RAND__.value, t: 'depenses', f: 'convention' },
					success: function(resp) {
						$j('[name="convention"]').val(resp.results[0].id);
						$j('[id=convention-container-readonly__RAND__]').html('<span id="convention-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=conventions_view_parent]').hide(); } else { $j('.btn[id=conventions_view_parent]').show(); }

						if(typeof(convention_update_autofills__RAND__) == 'function') convention_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_convention__RAND__.value, t: 'depenses', f: 'convention' },
				success: function(resp) {
					$j('[id=convention-container__RAND__], [id=convention-container-readonly__RAND__]').html('<span id="convention-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=conventions_view_parent]').hide(); } else { $j('.btn[id=conventions_view_parent]').show(); }

					if(typeof(convention_update_autofills__RAND__) == 'function') convention_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function ligne_budgetaire_reload__RAND__(filterer_convention) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#ligne_budgetaire-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_convention: filterer_convention, id: AppGini.current_ligne_budgetaire__RAND__.value, t: 'depenses', f: 'ligne_budgetaire' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="ligne_budgetaire"]').val(resp.results[0].id);
							$j('[id=ligne_budgetaire-container-readonly__RAND__]').html('<span id="ligne_budgetaire-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=budgets_view_parent]').hide(); } else { $j('.btn[id=budgets_view_parent]').show(); }


							if(typeof(ligne_budgetaire_update_autofills__RAND__) == 'function') ligne_budgetaire_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_convention: filterer_convention, s: term, p: page, t: 'depenses', f: 'ligne_budgetaire' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_ligne_budgetaire__RAND__.value = e.added.id;
				AppGini.current_ligne_budgetaire__RAND__.text = e.added.text;
				$j('[name="ligne_budgetaire"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=budgets_view_parent]').hide(); } else { $j('.btn[id=budgets_view_parent]').show(); }


				if(typeof(ligne_budgetaire_update_autofills__RAND__) == 'function') ligne_budgetaire_update_autofills__RAND__();
			});

			if(!$j("#ligne_budgetaire-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_ligne_budgetaire__RAND__.value, t: 'depenses', f: 'ligne_budgetaire' },
					success: function(resp) {
						$j('[name="ligne_budgetaire"]').val(resp.results[0].id);
						$j('[id=ligne_budgetaire-container-readonly__RAND__]').html('<span id="ligne_budgetaire-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=budgets_view_parent]').hide(); } else { $j('.btn[id=budgets_view_parent]').show(); }

						if(typeof(ligne_budgetaire_update_autofills__RAND__) == 'function') ligne_budgetaire_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_ligne_budgetaire__RAND__.value, t: 'depenses', f: 'ligne_budgetaire' },
				success: function(resp) {
					$j('[id=ligne_budgetaire-container__RAND__], [id=ligne_budgetaire-container-readonly__RAND__]').html('<span id="ligne_budgetaire-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=budgets_view_parent]').hide(); } else { $j('.btn[id=budgets_view_parent]').show(); }

					if(typeof(ligne_budgetaire_update_autofills__RAND__) == 'function') ligne_budgetaire_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function ligne_credit_reload__RAND__(filterer_convention) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#ligne_credit-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_convention: filterer_convention, id: AppGini.current_ligne_credit__RAND__.value, t: 'depenses', f: 'ligne_credit' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="ligne_credit"]').val(resp.results[0].id);
							$j('[id=ligne_credit-container-readonly__RAND__]').html('<span id="ligne_credit-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=lignes_credits_view_parent]').hide(); } else { $j('.btn[id=lignes_credits_view_parent]').show(); }


							if(typeof(ligne_credit_update_autofills__RAND__) == 'function') ligne_credit_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_convention: filterer_convention, s: term, p: page, t: 'depenses', f: 'ligne_credit' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_ligne_credit__RAND__.value = e.added.id;
				AppGini.current_ligne_credit__RAND__.text = e.added.text;
				$j('[name="ligne_credit"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=lignes_credits_view_parent]').hide(); } else { $j('.btn[id=lignes_credits_view_parent]').show(); }


				if(typeof(ligne_credit_update_autofills__RAND__) == 'function') ligne_credit_update_autofills__RAND__();
			});

			if(!$j("#ligne_credit-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_ligne_credit__RAND__.value, t: 'depenses', f: 'ligne_credit' },
					success: function(resp) {
						$j('[name="ligne_credit"]').val(resp.results[0].id);
						$j('[id=ligne_credit-container-readonly__RAND__]').html('<span id="ligne_credit-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=lignes_credits_view_parent]').hide(); } else { $j('.btn[id=lignes_credits_view_parent]').show(); }

						if(typeof(ligne_credit_update_autofills__RAND__) == 'function') ligne_credit_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_ligne_credit__RAND__.value, t: 'depenses', f: 'ligne_credit' },
				success: function(resp) {
					$j('[id=ligne_credit-container__RAND__], [id=ligne_credit-container-readonly__RAND__]').html('<span id="ligne_credit-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=lignes_credits_view_parent]').hide(); } else { $j('.btn[id=lignes_credits_view_parent]').show(); }

					if(typeof(ligne_credit_update_autofills__RAND__) == 'function') ligne_credit_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function contrat_reload__RAND__(filterer_convention) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#contrat-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_convention: filterer_convention, id: AppGini.current_contrat__RAND__.value, t: 'depenses', f: 'contrat' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="contrat"]').val(resp.results[0].id);
							$j('[id=contrat-container-readonly__RAND__]').html('<span id="contrat-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=recrutements_view_parent]').hide(); } else { $j('.btn[id=recrutements_view_parent]').show(); }


							if(typeof(contrat_update_autofills__RAND__) == 'function') contrat_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_convention: filterer_convention, s: term, p: page, t: 'depenses', f: 'contrat' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_contrat__RAND__.value = e.added.id;
				AppGini.current_contrat__RAND__.text = e.added.text;
				$j('[name="contrat"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=recrutements_view_parent]').hide(); } else { $j('.btn[id=recrutements_view_parent]').show(); }


				if(typeof(contrat_update_autofills__RAND__) == 'function') contrat_update_autofills__RAND__();
			});

			if(!$j("#contrat-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_contrat__RAND__.value, t: 'depenses', f: 'contrat' },
					success: function(resp) {
						$j('[name="contrat"]').val(resp.results[0].id);
						$j('[id=contrat-container-readonly__RAND__]').html('<span id="contrat-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=recrutements_view_parent]').hide(); } else { $j('.btn[id=recrutements_view_parent]').show(); }

						if(typeof(contrat_update_autofills__RAND__) == 'function') contrat_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_contrat__RAND__.value, t: 'depenses', f: 'contrat' },
				success: function(resp) {
					$j('[id=contrat-container__RAND__], [id=contrat-container-readonly__RAND__]').html('<span id="contrat-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=recrutements_view_parent]').hide(); } else { $j('.btn[id=recrutements_view_parent]').show(); }

					if(typeof(contrat_update_autofills__RAND__) == 'function') contrat_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function beneficiaire_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#beneficiaire-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_beneficiaire__RAND__.value, t: 'depenses', f: 'beneficiaire' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="beneficiaire"]').val(resp.results[0].id);
							$j('[id=beneficiaire-container-readonly__RAND__]').html('<span id="beneficiaire-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=personnes_view_parent]').hide(); } else { $j('.btn[id=personnes_view_parent]').show(); }


							if(typeof(beneficiaire_update_autofills__RAND__) == 'function') beneficiaire_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'depenses', f: 'beneficiaire' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_beneficiaire__RAND__.value = e.added.id;
				AppGini.current_beneficiaire__RAND__.text = e.added.text;
				$j('[name="beneficiaire"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=personnes_view_parent]').hide(); } else { $j('.btn[id=personnes_view_parent]').show(); }


				if(typeof(beneficiaire_update_autofills__RAND__) == 'function') beneficiaire_update_autofills__RAND__();
			});

			if(!$j("#beneficiaire-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_beneficiaire__RAND__.value, t: 'depenses', f: 'beneficiaire' },
					success: function(resp) {
						$j('[name="beneficiaire"]').val(resp.results[0].id);
						$j('[id=beneficiaire-container-readonly__RAND__]').html('<span id="beneficiaire-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=personnes_view_parent]').hide(); } else { $j('.btn[id=personnes_view_parent]').show(); }

						if(typeof(beneficiaire_update_autofills__RAND__) == 'function') beneficiaire_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_beneficiaire__RAND__.value, t: 'depenses', f: 'beneficiaire' },
				success: function(resp) {
					$j('[id=beneficiaire-container__RAND__], [id=beneficiaire-container-readonly__RAND__]').html('<span id="beneficiaire-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=personnes_view_parent]').hide(); } else { $j('.btn[id=personnes_view_parent]').show(); }

					if(typeof(beneficiaire_update_autofills__RAND__) == 'function') beneficiaire_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function ventilation_reload__RAND__(filterer_convention) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#ventilation-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_convention: filterer_convention, id: AppGini.current_ventilation__RAND__.value, t: 'depenses', f: 'ventilation' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="ventilation"]').val(resp.results[0].id);
							$j('[id=ventilation-container-readonly__RAND__]').html('<span id="ventilation-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=ventilation_view_parent]').hide(); } else { $j('.btn[id=ventilation_view_parent]').show(); }


							if(typeof(ventilation_update_autofills__RAND__) == 'function') ventilation_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_convention: filterer_convention, s: term, p: page, t: 'depenses', f: 'ventilation' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_ventilation__RAND__.value = e.added.id;
				AppGini.current_ventilation__RAND__.text = e.added.text;
				$j('[name="ventilation"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=ventilation_view_parent]').hide(); } else { $j('.btn[id=ventilation_view_parent]').show(); }


				if(typeof(ventilation_update_autofills__RAND__) == 'function') ventilation_update_autofills__RAND__();
			});

			if(!$j("#ventilation-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_ventilation__RAND__.value, t: 'depenses', f: 'ventilation' },
					success: function(resp) {
						$j('[name="ventilation"]').val(resp.results[0].id);
						$j('[id=ventilation-container-readonly__RAND__]').html('<span id="ventilation-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=ventilation_view_parent]').hide(); } else { $j('.btn[id=ventilation_view_parent]').show(); }

						if(typeof(ventilation_update_autofills__RAND__) == 'function') ventilation_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_ventilation__RAND__.value, t: 'depenses', f: 'ventilation' },
				success: function(resp) {
					$j('[id=ventilation-container__RAND__], [id=ventilation-container-readonly__RAND__]').html('<span id="ventilation-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=ventilation_view_parent]').hide(); } else { $j('.btn[id=ventilation_view_parent]').show(); }

					if(typeof(ventilation_update_autofills__RAND__) == 'function') ventilation_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/depenses_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/depenses_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'D&#233;pense', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm[1] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return depenses_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return depenses_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return depenses_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#convention').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#convention_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#ligne_budgetaire').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#ligne_budgetaire_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#ligne_credit').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#ligne_credit_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#dateDay, #dateMonth, #dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#intitule').replaceWith('<div class=\"form-control-static\" id=\"intitule\">' + (jQuery('#intitule').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#reference').replaceWith('<div class=\"form-control-static\" id=\"reference\">' + (jQuery('#reference').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#contrat').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#contrat_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#beneficiaire').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#beneficiaire_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#montant').replaceWith('<div class=\"form-control-static\" id=\"montant\">' + (jQuery('#montant').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#liquidee').prop('disabled', true);\n";
		$jsReadOnly .= "\tjQuery('#ventilation').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#ventilation_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#verifie').prop('disabled', true);\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(convention)%%>', $combo_convention->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(convention)%%>', $combo_convention->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(convention)%%>', urlencode($combo_convention->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(ligne_budgetaire)%%>', $combo_ligne_budgetaire->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(ligne_budgetaire)%%>', $combo_ligne_budgetaire->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(ligne_budgetaire)%%>', urlencode($combo_ligne_budgetaire->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(ligne_credit)%%>', $combo_ligne_credit->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(ligne_credit)%%>', $combo_ligne_credit->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(ligne_credit)%%>', urlencode($combo_ligne_credit->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date->GetHTML(true) . '</div>' : $combo_date->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date)%%>', $combo_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(contrat)%%>', $combo_contrat->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(contrat)%%>', $combo_contrat->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(contrat)%%>', urlencode($combo_contrat->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(beneficiaire)%%>', $combo_beneficiaire->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(beneficiaire)%%>', $combo_beneficiaire->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(beneficiaire)%%>', urlencode($combo_beneficiaire->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(ventilation)%%>', $combo_ventilation->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(ventilation)%%>', $combo_ventilation->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(ventilation)%%>', urlencode($combo_ventilation->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('convention' => array('conventions', 'Convention'), 'ligne_budgetaire' => array('budgets', 'Ligne Budg&#233;taire'), 'ligne_credit' => array('lignes_credits', 'Ligne de cr&#233;dit (CFI) - Exercice'), 'contrat' => array('recrutements', 'Contrat (si salaire)'), 'beneficiaire' => array('personnes', 'B&#233;n&#233;ficiaire'), 'ventilation' => array('ventilation', 'Ventilation Budg&#233;taire'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !$_REQUEST['Embedded']*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(convention)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(ligne_budgetaire)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(ligne_credit)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(intitule)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(reference)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(contrat)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(beneficiaire)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(montant)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(liquidee)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(ventilation)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(notes)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(verifie)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(convention)%%>', safe_html($urow['convention']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(convention)%%>', html_attr($row['convention']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(convention)%%>', urlencode($urow['convention']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(ligne_budgetaire)%%>', safe_html($urow['ligne_budgetaire']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(ligne_budgetaire)%%>', html_attr($row['ligne_budgetaire']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ligne_budgetaire)%%>', urlencode($urow['ligne_budgetaire']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(ligne_credit)%%>', safe_html($urow['ligne_credit']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(ligne_credit)%%>', html_attr($row['ligne_credit']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ligne_credit)%%>', urlencode($urow['ligne_credit']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date)%%>', @date('d/m/Y', @strtotime(html_attr($row['date']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date'])))), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(intitule)%%>', safe_html($urow['intitule']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(intitule)%%>', html_attr($row['intitule']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(intitule)%%>', urlencode($urow['intitule']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(reference)%%>', safe_html($urow['reference']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(reference)%%>', html_attr($row['reference']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reference)%%>', urlencode($urow['reference']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(contrat)%%>', safe_html($urow['contrat']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(contrat)%%>', html_attr($row['contrat']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(contrat)%%>', urlencode($urow['contrat']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(beneficiaire)%%>', safe_html($urow['beneficiaire']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(beneficiaire)%%>', html_attr($row['beneficiaire']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(beneficiaire)%%>', urlencode($urow['beneficiaire']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(montant)%%>', safe_html($urow['montant']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(montant)%%>', html_attr($row['montant']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(montant)%%>', urlencode($urow['montant']), $templateCode);
		$templateCode = str_replace('<%%CHECKED(liquidee)%%>', ($row['liquidee'] ? "checked" : ""), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(ventilation)%%>', safe_html($urow['ventilation']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(ventilation)%%>', html_attr($row['ventilation']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ventilation)%%>', urlencode($urow['ventilation']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(notes)%%>', '<textarea name="notes" id="notes" rows="5">' . html_attr($row['notes']) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(notes)%%>', '<div id="notes" class="form-control-static">' . $row['notes'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(notes)%%>', nl2br($row['notes']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(notes)%%>', urlencode($urow['notes']), $templateCode);
		$templateCode = str_replace('<%%CHECKED(verifie)%%>', ($row['verifie'] ? "checked" : ""), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(convention)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(convention)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(ligne_budgetaire)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ligne_budgetaire)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(ligne_credit)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ligne_credit)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(intitule)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(intitule)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(reference)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reference)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(contrat)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(contrat)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(beneficiaire)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(beneficiaire)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(montant)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(montant)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%CHECKED(liquidee)%%>', '', $templateCode);
		$templateCode = str_replace('<%%VALUE(ventilation)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ventilation)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(notes)%%>', '<textarea name="notes" id="notes" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%CHECKED(verifie)%%>', '', $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('depenses');
	if($selected_id) {
		$jdata = get_joined_record('depenses', $selected_id);
		if($jdata === false) $jdata = get_defaults('depenses');
		$rdata = $row;
	}
	$templateCode .= loadView('depenses-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: depenses_dv
	if(function_exists('depenses_dv')) {
		$args=[];
		depenses_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}